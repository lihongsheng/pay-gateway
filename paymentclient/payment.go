// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: payment.proto

package paymentclient

import (
	"context"

	"github.com/lihongsheng/pay-gateway/payment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Action          = payment.Action
	Amount          = payment.Amount
	ApplicationInfo = payment.ApplicationInfo
	Goods           = payment.Goods
	H5              = payment.H5
	Order           = payment.Order
	PayRequest      = payment.PayRequest
	PayResponse     = payment.PayResponse
	Payer           = payment.Payer
	Query           = payment.Query
	SceneInfo       = payment.SceneInfo
	SettleInfo      = payment.SettleInfo

	Payment interface {
		Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*PayResponse, error)
	}

	defaultPayment struct {
		cli zrpc.Client
	}
)

func NewPayment(cli zrpc.Client) Payment {
	return &defaultPayment{
		cli: cli,
	}
}

func (m *defaultPayment) Pay(ctx context.Context, in *PayRequest, opts ...grpc.CallOption) (*PayResponse, error) {
	client := payment.NewPaymentClient(m.cli.Conn())
	return client.Pay(ctx, in, opts...)
}
